name: codestyle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/images/Dockerfile-php
          push: false
          tags: codestyle-php-image:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          outputs: type=docker,dest=/tmp/codestyle-php-image.tar


      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Upload image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: codestyle-php-image
          path: /tmp/codestyle-php-image.tar
          retention-days: 1
          overwrite: true

  style-linting:
    name: PHPCS style linting
    runs-on: ubuntu-24.04
    needs: build-image

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: codestyle-php-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load < /tmp/codestyle-php-image.tar

      - name: Run PHPCS to check following the code standard
        run: |
          docker run --name codestyle -d codestyle-php-image:latest
          docker exec codestyle composer --working-dir=/src/app update --no-interaction
          docker exec codestyle bin/codestyle-check
          docker rm -f codestyle

  code-analyze:
    name: PHPStan static analysis
    runs-on: ubuntu-24.04
    needs: build-image

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: codestyle-php-image
          path: /tmp

      - name: Load Docker image
        run: |
          docker load < /tmp/codestyle-php-image.tar

      - name: Run PHPStan to analyze the codebase
        run: |
          docker run --name codestyle -d codestyle-php-image:latest
          docker exec codestyle composer --working-dir=/src/app update --no-interaction
          # phpstan is crashing when opcache is enabled
          docker exec codestyle sed -i 's/enable_cli=1/enable_cli=0/' /etc/php/conf.d/opcache.ini
          docker exec codestyle bin/codestyle-analyze
          docker rm -f codestyle
